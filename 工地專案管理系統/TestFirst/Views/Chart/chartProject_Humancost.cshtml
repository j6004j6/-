
@model IEnumerable<TestFirst.tProject_HumanCost>

@{
    ViewBag.Title = "chartProject_Humancost";
}
@*<script src="../Scripts/Chart.min.js"></script>*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.js"></script>


<br />
<div>
    <h4 style="font-weight:bold">
        員工薪資表
        @Html.ActionLink("專案時程圖", "chartProject", "Chart", new { }, new { @class = "btn btn-secondary" })
        @Html.ActionLink("施工日數表", "chartMission", "Chart", new { }, new { @class = "btn btn-secondary" })
        @Html.ActionLink("員工薪資表", "chartProject_humancost", "Chart", new { }, new { @class = "btn btn-info" })
    </h4>
</div>
@*各職位新資HTML*@
<hr />
<div class="container">
    <div class="jumbotron alert-success">
        <h2>各職位新資</h2>
    </div>
    <div class="col-md-8 col-md-offset-2">
        <canvas id="barChart"></canvas>
    </div>
</div>
<hr />


@*各職位薪資C#運算*@
@{

    List<string> fLevel = new List<string>();
    List<int> fSalary = new List<int>();
    foreach (var item in Model)
    {

        if (fLevel.Count == 0)//第一筆
        {
            fLevel.Add(item.fLevel);
            fSalary.Add((int)item.fSalary);
        }
        else
        {
            if (!fLevel.Contains(item.fLevel))//職位不重複
            {
                fLevel.Add(item.fLevel);
                fSalary.Add((int)item.fSalary);
            }

        }
    }
    var labfLevel = Json.Encode(fLevel);
    var labfSalary = Json.Encode(fSalary);


}

@*各職位新資之BAR圖Javascript*@
<script>

    var ctx = document.getElementById("barChart");
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels:@Html.Raw(labfLevel),
            datasets: [{
                label: '',
                data: @Html.Raw(labfSalary),
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            },
            ]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }],
            }
        }
    });
</script>

@*--------------------------Part 2-------------------------------*@

@*專案人事支出人事支出C#部分*@
@{






    int pindex = 0;

    //List<int> tTpa01 = new List<int> { 1, 2, 3, 4, 5 };
    //List<int> tTpa02 = new List<int> { 2, 4, 3, 1, 5 };
    //List<int> tTpa03 = new List<int> { 5, 3, 2, 4, 1 };
    //List<int> tTYH01 = new List<int> { 1, 5, 3, 4, 2 };
    //List<int> tNWT01 = new List<int> { 3, 4, 1, 2, 5 };
    var jsonfProjectCode0 = Json.Encode(ViewBag.fProjectCode[0]);
    var jsonfProjectCode1 = Json.Encode(ViewBag.fProjectCode[1]);
    var jsonfProjectCode2 = Json.Encode(ViewBag.fProjectCode[2]);
    var jsonfProjectCode3 = Json.Encode(ViewBag.fProjectCode[3]);
    var jsonfProjectCode4 = Json.Encode(ViewBag.fProjectCode[4]);

    var jsontTpa01 = Json.Encode(@ViewBag.tTpa01);
    var jsontTpa02 = Json.Encode(@ViewBag.tTpa02);
    var jsontTpa03 = Json.Encode(@ViewBag.tTpa03);
    var jsontTYH01 = Json.Encode(@ViewBag.tTYH01);
    var jsontNWT01 = Json.Encode(@ViewBag.tNWT01);
}



@*專案人事支出人事支出HTML部分*@
<div class="container">
    <div class="jumbotron alert-success">
        <h2>專案人事支出</h2>
    </div>
    <div class="dropdown">
        <div id="divProject" class="btn-group" role="group" aria-label="Basic example">
            @foreach (var item in @ViewBag.fProjectCode)
            {
                pindex++;
                string sid = "btn" + pindex;
                <input type="button" class="btn btn-info" value=@item id=@sid />
            }
        </div>

    </div>
    <div class="col-md-8 col-md-offset-2">
        <canvas id="radarChart"></canvas>
    </div>
</div>



@*專案人事支出人事支出Javascript畫圖部分*@
<script>

    var value1
    var valLab

    var ctx = document.getElementById('radarChart')
    f1()
    document.querySelector("#btn1").addEventListener("click", f1)
    function f1() {
        //alert("111");
        value1 =@Html.Raw(jsontTpa01)
            valLab = @Html.Raw(jsonfProjectCode0)
        drow2();
    }
    document.querySelector("#btn2").addEventListener("click", f2)
    function f2() {
        value1=@Html.Raw(jsontTpa02)
            valLab = @Html.Raw(jsonfProjectCode1)
        drow2();
    }
    document.querySelector("#btn3").addEventListener("click", f3)
    function f3() {
        value1=@Html.Raw(jsontTYH01)
            valLab = @Html.Raw(jsonfProjectCode2)
        drow2();
    }
    document.querySelector("#btn4").addEventListener("click", f4)
    function f4() {
        value1=@Html.Raw(jsontTpa03)
            valLab = @Html.Raw(jsonfProjectCode3)
        drow2();
    }
    document.querySelector("#btn5").addEventListener("click", f5)
    function f5() {
        value1=@Html.Raw(jsontNWT01)
            valLab = @Html.Raw(jsonfProjectCode4)
        drow2();
    }
    function drow2() {
        var chart = new Chart(ctx, {
        type: 'radar',
        data: {
            labels: @Html.Raw(labfLevel),
            datasets: [{
                label: valLab,
                data: value1,
                backgroundColor: 'rgba(173,255,47, 0.5)',
                borderColor: 'rgb(0,0,0)',
                pointStyle: 'circle',
                pointBackgroundColor: 'rgb(0,0,255)',
                pointRadius: 1,
                pointHoverRadius: 0,
            }]
        },
        options: {
            responsive: true,
            legend: {
                position: 'top',
                labels: {
                    fontColor: 'black',
                    fontSize: 24
                }
            },
            title: {
                display: true,
                text: '專案人事支出(職位*人數)',
                fontSize: 26,
            },
            scale: {
                ticks: {
                    beginAtZero: true
                },
                pointLabels: {
                    fontSize: 20
                },
            },
        }
    });
    }


</script>
